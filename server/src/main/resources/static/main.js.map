{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/role.guard.ts","webpack:///./src/app/main/admin-view/admin.component.css","webpack:///./src/app/main/admin-view/admin.component.html","webpack:///./src/app/main/admin-view/admin.component.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/main/public/app.component.css","webpack:///./src/app/main/public/app.component.html","webpack:///./src/app/main/public/app.component.ts","webpack:///./src/app/main/public/home/home.component.css","webpack:///./src/app/main/public/home/home.component.html","webpack:///./src/app/main/public/home/home.component.ts","webpack:///./src/app/main/public/login/login.component.css","webpack:///./src/app/main/public/login/login.component.html","webpack:///./src/app/main/public/login/login.component.ts","webpack:///./src/app/main/public/login/model/login.model.ts","webpack:///./src/app/main/public/register/model/register.model.ts","webpack:///./src/app/main/public/register/register.component.css","webpack:///./src/app/main/public/register/register.component.html","webpack:///./src/app/main/public/register/register.component.ts","webpack:///./src/app/main/shared-components/change-password/change-password-component.css","webpack:///./src/app/main/shared-components/change-password/change-password-component.html","webpack:///./src/app/main/shared-components/change-password/change-password-component.ts","webpack:///./src/app/main/shared-components/services/edit.password.service.ts","webpack:///./src/app/main/shared-components/services/edit.patient.service.ts","webpack:///./src/app/main/user-view/blog/blog.component.css","webpack:///./src/app/main/user-view/blog/blog.component.html","webpack:///./src/app/main/user-view/blog/blog.component.ts","webpack:///./src/app/main/user-view/products/dentist-profile/dentist.profile.component.css","webpack:///./src/app/main/user-view/products/dentist-profile/dentist.profile.component.html","webpack:///./src/app/main/user-view/products/dentist-profile/dentist.profile.component.ts","webpack:///./src/app/main/user-view/products/dentist-profile/ratings/dentist.rating.model.ts","webpack:///./src/app/main/user-view/products/dentist-profile/ratings/ratings.component.css","webpack:///./src/app/main/user-view/products/dentist-profile/ratings/ratings.component.html","webpack:///./src/app/main/user-view/products/dentist-profile/ratings/ratings.component.ts","webpack:///./src/app/main/user-view/products/dentist.results.component.css","webpack:///./src/app/main/user-view/products/dentist.results.component.html","webpack:///./src/app/main/user-view/products/dentist.results.component.ts","webpack:///./src/app/main/user-view/products/events/events.component.css","webpack:///./src/app/main/user-view/products/events/events.component.html","webpack:///./src/app/main/user-view/products/events/events.component.ts","webpack:///./src/app/main/user-view/products/services/dentist.common.service.ts","webpack:///./src/app/main/user-view/shopping-cart/shopping.cart.component.css","webpack:///./src/app/main/user-view/shopping-cart/shopping.cart.component.html","webpack:///./src/app/main/user-view/shopping-cart/shopping.cart.component.ts","webpack:///./src/app/main/user-view/user-profile/edit-address/edit.profile.component.css","webpack:///./src/app/main/user-view/user-profile/edit-address/edit.profile.component.html","webpack:///./src/app/main/user-view/user-profile/edit-address/edit.profile.component.ts","webpack:///./src/app/main/user-view/user-profile/edit-profile/edit-profile.component.css","webpack:///./src/app/main/user-view/user-profile/edit-profile/edit-profile.component.html","webpack:///./src/app/main/user-view/user-profile/edit-profile/edit-profile.component.ts","webpack:///./src/app/main/user-view/user-profile/user-profile.component.css","webpack:///./src/app/main/user-view/user-profile/user-profile.component.html","webpack:///./src/app/main/user-view/user-profile/user-profile.component.ts","webpack:///./src/app/main/user-view/user.component.css","webpack:///./src/app/main/user-view/user.component.html","webpack:///./src/app/main/user-view/user.component.ts","webpack:///./src/app/models/constants.ts","webpack:///./src/app/services/admin.service.ts","webpack:///./src/app/services/common.service.ts","webpack:///./src/app/services/model/change.pass.model.ts","webpack:///./src/app/services/model/edit.user.profile.model.ts","webpack:///./src/app/services/model/manage.block.model.ts","webpack:///./src/app/services/ratings.service.ts","webpack:///./src/app/services/users.service.ts","webpack:///./src/app/util/common.util.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {RouterModule, Routes} from \"@angular/router\";\r\nimport {NgModule} from \"@angular/core\";\r\nimport {MainComponent} from \"./main/main.component\";\r\nimport {UserComponent} from \"./main/user-view/user.component\";\r\nimport {RoleGuard} from \"./guards/role.guard\";\r\nimport {AdminComponent} from \"./main/admin-view/admin.component\";\r\nimport {AppComponent} from \"./main/public/app.component\";\r\nimport {HomeComponent} from \"./main/public/home/home.component\";\r\nimport {RegisterComponent} from \"./main/public/register/register.component\";\r\nimport {LoginComponent} from \"./main/public/login/login.component\";\r\nimport {DentistResultsComponent} from \"./main/user-view/products/dentist.results.component\";\r\nimport {DentistProfileComponent} from \"./main/user-view/products/dentist-profile/dentist.profile.component\";\r\nimport {EditProfileComponent} from \"./main/user-view/user-profile/edit-profile/edit-profile.component\";\r\nimport {UserProfileComponent} from \"./main/user-view/user-profile/user-profile.component\";\r\nimport {ChangePasswordComponent} from \"./main/shared-components/change-password/change-password-component\";\r\nimport {ShoppingCartComponent} from \"./main/user-view/shopping-cart/shopping.cart.component\";\r\nimport {BlogComponent} from \"./main/user-view/blog/blog.component\";\r\n\r\nconst appRoutes: Routes = [\r\n  {path: '', component: MainComponent, children:[\r\n\r\n    {path: '', component: AppComponent, children:[\r\n      {path: '', redirectTo: 'home', pathMatch: 'full'},\r\n      {path: 'home', component: HomeComponent, children: [\r\n        {path: '', pathMatch: 'full', component: DentistResultsComponent},\r\n        {path: 'dentists', pathMatch: 'full', component: DentistResultsComponent},\r\n        {path: 'result/:id', pathMatch: 'full', component: DentistProfileComponent}\r\n      ]},\r\n      {path: 'register', component: RegisterComponent},\r\n      {path: 'login', component: LoginComponent},\r\n    ]},\r\n\r\n    {path: 'user', component: UserComponent,\r\n      children: [\r\n        {path: '', redirectTo: 'dentists', pathMatch: 'full'},\r\n        { path: 'profile', component: UserProfileComponent, children: [\r\n          { path: '', redirectTo: 'edit', pathMatch: 'full'},\r\n          { path: 'edit', pathMatch: 'full', component: EditProfileComponent},\r\n        ]},\r\n        { path: 'changepass', component: ChangePasswordComponent},\r\n        { path: 'dentists', component: DentistResultsComponent},\r\n        { path: 'result/:id', component: DentistProfileComponent},\r\n        { path: 'cart', component: ShoppingCartComponent},\r\n        { path: 'blog', component: BlogComponent}\r\n      ],\r\n      canActivate: [RoleGuard],\r\n      data: { roles: ['USER'] }\r\n    },\r\n\r\n    {path: 'admin', component: AdminComponent, canActivate: [RoleGuard], data: { roles: ['ADMIN'] }},\r\n\r\n    {path: '**', component: HomeComponent}\r\n  ]}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(\r\n      appRoutes,\r\n      {\r\n        useHash: true,\r\n        enableTracing: false // <-- debugging purposes only\r\n      }\r\n    )\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {HttpModule, JsonpModule} from \"@angular/http\";\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {RouterModule} from \"@angular/router\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {UserComponent} from \"./main/user-view/user.component\";\r\nimport {ChangePasswordComponent} from \"./main/shared-components/change-password/change-password-component\";\r\nimport {AppRoutingModule} from \"./app-routing.module\";\r\nimport {UserProfileComponent} from \"./main/user-view/user-profile/user-profile.component\";\r\nimport {MainComponent} from \"./main/main.component\";\r\nimport {AdminService} from \"./services/admin.service\";\r\nimport {AdminComponent} from \"./main/admin-view/admin.component\";\r\nimport {CommonService} from \"./services/common.service\";\r\nimport {RoleGuard} from \"./guards/role.guard\";\r\nimport {UsersService} from \"./services/users.service\";\r\nimport {AuthGuard} from \"./guards/auth.guard\";\r\nimport {EditProfileComponent} from \"./main/user-view/user-profile/edit-profile/edit-profile.component\";\r\nimport {EditPasswordService} from \"./main/shared-components/services/edit.password.service\";\r\nimport {EditPatientProfileService} from \"./main/shared-components/services/edit.patient.service\";\r\nimport {AppComponent} from \"./main/public/app.component\";\r\nimport {HomeComponent} from \"./main/public/home/home.component\";\r\nimport {RegisterComponent} from \"./main/public/register/register.component\";\r\nimport {LoginComponent} from \"./main/public/login/login.component\";\r\nimport {DentistResultsComponent} from \"./main/user-view/products/dentist.results.component\";\r\nimport {EventsComponent} from \"./main/user-view/products/events/events.component\";\r\nimport {DentistProfileComponent} from \"./main/user-view/products/dentist-profile/dentist.profile.component\";\r\nimport {RatingsComponent} from \"./main/user-view/products/dentist-profile/ratings/ratings.component\";\r\nimport {DentistCommonService} from \"./main/user-view/products/services/dentist.common.service\";\r\nimport {DatePipe} from \"@angular/common\";\r\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {RatingsService} from \"./services/ratings.service\";\r\nimport {EditDentistProfileComponent} from \"./main/user-view/user-profile/edit-address/edit.profile.component\";\r\nimport {ShoppingCartComponent} from \"./main/user-view/shopping-cart/shopping.cart.component\";\r\nimport {BlogComponent} from \"./main/user-view/blog/blog.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    UserComponent,\r\n    AdminComponent,\r\n    MainComponent,\r\n    ChangePasswordComponent,\r\n    UserProfileComponent,\r\n    DentistResultsComponent,\r\n    EditProfileComponent,\r\n    EventsComponent,\r\n    DentistProfileComponent,\r\n    RatingsComponent,\r\n    EditDentistProfileComponent,\r\n    ShoppingCartComponent,\r\n    BlogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    JsonpModule,\r\n    RouterModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [\r\n    CommonService,\r\n    RoleGuard,\r\n    AuthGuard,\r\n    UsersService,\r\n    AdminService,\r\n    RatingsService,\r\n    EditPasswordService,\r\n    EditPatientProfileService,\r\n    DentistCommonService\r\n  ],\r\n  bootstrap: [MainComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {CanActivate, Router} from \"@angular/router\";\r\nimport {CommonUtil} from \"../util/common.util\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router) {\r\n  }\r\n  canActivate() {\r\n    let userRole = CommonUtil.getSessionUserRole();\r\n    if (userRole) {\r\n      this.router.navigate(['/' + userRole.toLowerCase()]);\r\n      return true;\r\n    }\r\n    else {\r\n      this.router.navigate(['/login']);\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\r\nimport {CommonUtil} from \"../util/common.util\";\r\n\r\n@Injectable()\r\nexport class RoleGuard implements CanActivate {\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot,\r\n              state: RouterStateSnapshot): boolean {\r\n    let userRole = CommonUtil.getSessionUserRole();\r\n    let roles = route.data[\"roles\"] as Array<string>;\r\n    return (roles == null || roles.indexOf(userRole) != -1);\r\n  }\r\n}\r\n","module.exports = \".header {\\r\\n  max-height: 10px;\\r\\n}\\r\\n\\r\\n.logo {\\r\\n  padding-right: 5px;\\r\\n}\\r\\n\\r\\n.header-navi {\\r\\n  height: 60px;\\r\\n}\\r\\n\\r\\n.nav{\\r\\n  margin-top: 10px;\\r\\n  display: inline-block;\\r\\n  width:16%;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nh1{\\r\\n  text-align: center;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"main-container\\\">\\r\\n  <header class=\\\"header-6\\\">\\r\\n    <div class=\\\"branding\\\">\\r\\n      <a href=\\\"...\\\" class=\\\"nav-link\\\">\\r\\n        <div class=\\\"logo\\\">\\r\\n          <img src=\\\"https://www.clker.com/cliparts/A/K/h/3/U/N/tooth-md.png\\\" width=\\\"50\\\" height=\\\"50\\\">\\r\\n        </div>\\r\\n        <span class=\\\"title\\\">Appointment App - Admin Dashboard</span>\\r\\n      </a>\\r\\n    </div>\\r\\n    <div class=\\\"header-actions\\\">\\r\\n\\r\\n    </div>\\r\\n  </header>\\r\\n  <div class=\\\"wrapper\\\">\\r\\n    <div *ngIf=\\\"users\\\">\\r\\n      <h1>Patients</h1>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {UserModel} from \"../../models/user.model\";\r\nimport {CommonUtil} from \"../../util/common.util\";\r\nimport {UsersService} from \"../../services/users.service\";\r\nimport {Constants} from \"../../models/constants\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ProductModel} from \"../../models/product.model\";\r\n\r\n\r\n@Component({\r\n  selector: 'admin-component',\r\n  templateUrl: 'admin.component.html',\r\n  styleUrls: [\"admin.component.css\"],\r\n  providers: []\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  //TODO: Put admin component trough routing on it's place.\r\n  //TODO: Paging, filtering, sorting, visuals.\r\n  private currentUser: UserModel;\r\n  private products: ProductModel[] = [];\r\n  private userEmail: string = '';\r\n\r\n  constructor(private usersService: UsersService,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = CommonUtil.getSessionUser();\r\n    this.userEmail = CommonUtil.getSessionUserEmail();\r\n    if (this.currentUser && this.currentUser.role == Constants.ROLE_ADMIN) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  private logout(){\r\n    CommonUtil.removeUser();\r\n    this.router.navigate(['']);\r\n  }\r\n\r\n  private loadData(): void {\r\n    this.usersService.getAllProducts()\r\n      .subscribe(products => this.products = products,\r\n        error => console.error(error));\r\n  }\r\n}\r\n","module.exports = \"  /*.main-container {*/\\r\\n    /*display: flex;*/\\r\\n    /*justify-content: center;*/\\r\\n    /*text-align: center;*/\\r\\n    /*}*/\\r\\n\"","module.exports = \"<div class=\\\"main-container\\\">\\r\\n   <router-outlet>\\r\\n   </router-outlet>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n              moduleId: module.id,\r\n              selector: 'main-component',\r\n              templateUrl: 'main.component.html',\r\n              styleUrls: [\"main.component.css\"],\r\n              providers: []\r\n           })\r\nexport class MainComponent implements OnInit {\r\n   constructor() {\r\n   }\r\n\r\n   ngOnInit() {\r\n   }\r\n}\r\n","module.exports = \".header-navi {\\r\\n  height: 60px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.nav {\\r\\n  margin-top: 15px;\\r\\n  display: inline-block;\\r\\n  width:16%;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.navbar {\\r\\n  margin-top: 10px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.logo {\\r\\n  padding-right: 5px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"main-container\\\">\\r\\n  <header class=\\\"header-6\\\">\\r\\n    <div class=\\\"branding\\\">\\r\\n      <a href=\\\"...\\\" class=\\\"nav-link\\\">\\r\\n        <div class=\\\"logo\\\">\\r\\n          <img src=\\\"https://www.clker.com/cliparts/A/K/h/3/U/N/tooth-md.png\\\" width=\\\"50\\\" height=\\\"50\\\">\\r\\n        </div>\\r\\n        <span class=\\\"title\\\">Fish Store</span>\\r\\n      </a>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"header-nav nav-justified\\\">\\r\\n      <a class=\\\"nav-link nav-text\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">Home</a>\\r\\n      <a class=\\\"nav-link nav-text\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Login</a>\\r\\n      <a class=\\\"nav-link nav-text\\\" routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\">Register</a>\\r\\n    </div>\\r\\n  </header>\\r\\n  <router-outlet>\\r\\n  </router-outlet>\\r\\n</div>\\r\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\" style=\\\"\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item active\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Features</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Pricing</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">About</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\r\\n      <input class=\\\"form-control mr-sm-2\\\" placeholder=\\\"Search\\\" type=\\\"text\\\">\\r\\n      <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\r\\n    </form>\\r\\n  </div>\\r\\n</nav>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Primary</button>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {CommonUtil} from \"../../util/common.util\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n              moduleId: module.id,\r\n              selector: 'app-component',\r\n              templateUrl: 'app.component.html',\r\n              styleUrls: [\"app.component.css\"],\r\n              providers: []\r\n           })\r\nexport class AppComponent implements OnInit {\r\n   constructor(private router: Router) {\r\n   }\r\n\r\n   ngOnInit() {\r\n     let userRole = CommonUtil.getSessionUserRole();\r\n     if(userRole){\r\n       this.router.navigate(['/' + userRole.toLowerCase()]);\r\n     }\r\n   }\r\n}\r\n","module.exports = \".container {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  text-align: center;\\r\\n  width: 1000px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n              selector: 'home-component',\r\n              templateUrl: 'home.component.html',\r\n              styleUrls: [\"home.component.css\"],\r\n              providers: []\r\n           })\r\nexport class HomeComponent {\r\n   constructor() {\r\n   }\r\n}\r\n","module.exports = \".login-container {\\r\\n  display:flex;\\r\\n  justify-content: center;\\r\\n  height: 200px;\\r\\n  widht: 200px;\\r\\n}\\r\\n.label-login {\\r\\n  text-align: center;\\r\\n  padding-bottom: 30px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"login-container\\\">\\r\\n  <div [hidden]=\\\"submitted\\\">\\r\\n    <form class=\\\"login\\\" (ngSubmit)=\\\"onSubmit()\\\" #loginForm=\\\"ngForm\\\">\\r\\n      <div class=\\\"label-login\\\"><label><h2 class=\\\"welcome\\\">Login Panel</h2></label></div>\\r\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\r\\n        <div class=\\\"alert-items\\\">\\r\\n          <div class=\\\"alert-item static\\\">\\r\\n            <div class=\\\"alert-icon-wrapper\\\">\\r\\n            </div>\\r\\n            <span class=\\\"alert-text\\\">{{error}}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"required\\\">Email</label>\\r\\n        <input type=\\\"email\\\"\\r\\n               id=\\\"email\\\"\\r\\n               aria-label=\\\"Email\\\"\\r\\n               required\\r\\n               [(ngModel)]=\\\"model.email\\\"\\r\\n               name=\\\"email\\\"\\r\\n               #email=\\\"ngModel\\\"\\r\\n               placeholder=\\\"Enter email\\\"\\r\\n               size=\\\"35\\\">\\r\\n        <div [hidden]=\\\"email.valid || email.pristine\\\"\\r\\n             class=\\\"alert alert-danger\\\">\\r\\n          Email is required\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"required\\\">Password</label>\\r\\n        <input type=\\\"password\\\"\\r\\n               id=\\\"password\\\"\\r\\n               required\\r\\n               [(ngModel)]=\\\"model.password\\\"\\r\\n               name=\\\"password\\\"\\r\\n               #password=\\\"ngModel\\\"\\r\\n               placeholder=\\\"Enter password\\\"\\r\\n               size=\\\"35\\\">\\r\\n        <div [hidden]=\\\"password.valid || password.pristine\\\"\\r\\n             class=\\\"alert alert-danger\\\">\\r\\n          Password is required\\r\\n        </div>\\r\\n      </div>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"!loginForm.form.valid\\\">\\r\\n        Log in\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {LoginModel} from \"./model/login.model\";\r\nimport {Router} from \"@angular/router\";\r\nimport {CommonService} from \"../../../services/common.service\";\r\nimport {CommonUtil} from \"../../../util/common.util\";\r\nimport {Constants} from \"../../../models/constants\";\r\n\r\n@Component({\r\n              selector: 'login-component',\r\n              templateUrl: 'login.component.html',\r\n              styleUrls: [\"login.component.css\"],\r\n              providers: []\r\n           })\r\nexport class LoginComponent implements OnInit {\r\n   private error: string;\r\n   private model: LoginModel = new LoginModel();\r\n   private userRole;\r\n\r\n   constructor(private commonService: CommonService, private router: Router) {\r\n   }\r\n\r\n   ngOnInit() {\r\n   }\r\n\r\n   onSubmit() {\r\n      this.error = null;\r\n      this.commonService.logIn(this.model)\r\n          .subscribe(result => {\r\n                if (result.user == null) {\r\n                  this.error = result.message;\r\n                } else {\r\n                  CommonUtil.putSessionUser(result.user);\r\n                  this.userRole = CommonUtil.getSessionUserRole();\r\n                  switch(this.userRole){\r\n                    case Constants.ROLE_ADMIN: this.router.navigate(['/admin']); break;\r\n                    case Constants.ROLE_USER: this.router.navigate(['/user']); break;\r\n                  }\r\n                }\r\n             },\r\n             error => console.error(error));\r\n   }\r\n}\r\n","export class LoginModel {\r\n   public email: string = \"\";\r\n   public password: string = \"\";\r\n}\r\n","export class RegisterModel {\r\n   email: string = \"\";\r\n   password: string = \"\";\r\n   firstName: string = \"\";\r\n   lastName: string = \"\";\r\n   role: string = \"USER\";\r\n}\r\n","module.exports = \".no-style .ng-valid {\\r\\n  border-left: 1px solid #CCC\\r\\n}\\r\\n\\r\\n.no-style .ng-invalid {\\r\\n  border-left: 1px solid #CCC\\r\\n}\\r\\n\\r\\n.register-container {\\r\\n  position: absolute;\\r\\n  height: 200px;\\r\\n  widht: 200px;\\r\\n  top: 25%;\\r\\n  left: 50%;\\r\\n  -webkit-transform: translate(-50%,-50%);\\r\\n          transform: translate(-50%,-50%);\\r\\n}\\r\\n\\r\\n.label-login {\\r\\n  text-align: center;\\r\\n  padding-bottom: 30px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"register-container\\\">\\r\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"failMessage\\\">\\r\\n    <div class=\\\"alert-items\\\">\\r\\n      <div class=\\\"alert-item static\\\">\\r\\n        <div class=\\\"alert-icon-wrapper\\\">\\r\\n        </div>\\r\\n        <span class=\\\"alert-text\\\">\\r\\n               {{failMessage}}\\r\\n            </span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"closeAlert()\\\">\\r\\n\\r\\n    </button>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"submitted\\\">\\r\\n    <form (ngSubmit)=\\\"onSubmit()\\\"\\r\\n          #registerForm=\\\"ngForm\\\">\\r\\n      <div class=\\\"label-login\\\"><label><h2 class=\\\"welcome\\\">Registration Panel</h2></label></div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"email\\\">Email</label>\\r\\n        <input type=\\\"email\\\"\\r\\n               id=\\\"email\\\"\\r\\n               required\\r\\n               [(ngModel)]=\\\"model.email\\\"\\r\\n               name=\\\"email\\\"\\r\\n               #email=\\\"ngModel\\\"\\r\\n               placeholder=\\\"Email here\\\"\\r\\n               size=\\\"35\\\">\\r\\n        <div [hidden]=\\\"email.valid || email.pristine\\\"\\r\\n             class=\\\"alert alert-danger\\\">\\r\\n          Email is required\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\">Password</label>\\r\\n        <input type=\\\"password\\\"\\r\\n               id=\\\"password\\\"\\r\\n               required\\r\\n               [(ngModel)]=\\\"model.password\\\"\\r\\n               name=\\\"password\\\"\\r\\n               #password=\\\"ngModel\\\"\\r\\n               placeholder=\\\"Password here\\\"\\r\\n               size=\\\"35\\\">\\r\\n        <div [hidden]=\\\"password.valid || password.pristine\\\"\\r\\n             class=\\\"alert alert-danger\\\">\\r\\n          Password is required\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"firstName\\\">First name</label>\\r\\n        <input type=\\\"text\\\"\\r\\n               id=\\\"firstName\\\"\\r\\n               required\\r\\n               [(ngModel)]=\\\"model.firstName\\\"\\r\\n               name=\\\"firstName\\\"\\r\\n               #firstName=\\\"ngModel\\\"\\r\\n               placeholder=\\\"First name here\\\"\\r\\n               size=\\\"35\\\">\\r\\n        <div [hidden]=\\\"firstName.valid || firstName.pristine\\\"\\r\\n             class=\\\"alert alert-danger\\\">\\r\\n          First name is required\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"lastName\\\">Last name</label>\\r\\n        <input type=\\\"text\\\"\\r\\n               id=\\\"lastName\\\"\\r\\n               required\\r\\n               [(ngModel)]=\\\"model.lastName\\\"\\r\\n               name=\\\"lastName\\\"\\r\\n               #lastName=\\\"ngModel\\\"\\r\\n               placeholder=\\\"Last name here\\\"\\r\\n               size=\\\"35\\\">\\r\\n        <div [hidden]=\\\"lastName.valid || lastName.pristine\\\"\\r\\n             class=\\\"alert alert-danger\\\">\\r\\n          Last name is required\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\"\\r\\n              [disabled]=\\\"!registerForm.form.valid\\\">Register\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {RegisterModel} from \"./model/register.model\";\r\nimport {CommonService} from \"../../../services/common.service\";\r\nimport {CommonUtil} from \"../../../util/common.util\";\r\nimport {Constants} from \"../../../models/constants\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n              selector: 'register-component',\r\n              templateUrl: 'register.component.html',\r\n              styleUrls: [\"register.component.css\"],\r\n              providers: []\r\n           })\r\nexport class RegisterComponent implements OnInit {\r\n\r\n   private model: RegisterModel = new RegisterModel();\r\n   private Constants = Constants;\r\n   private userRole;\r\n   private failMessage: string;\r\n\r\n   constructor(private commonService: CommonService, private router: Router) {\r\n   }\r\n\r\n   ngOnInit() {\r\n   }\r\n\r\n   private closeAlert(): void {\r\n      this.failMessage = null;\r\n   }\r\n\r\n   onSubmit() {\r\n      this.commonService.register(this.model)\r\n          .subscribe(result => {\r\n                        if (result.result == Constants.RESULT_SUCCESSFUL) {\r\n                           CommonUtil.putSessionUser(result.user);\r\n                           this.userRole = CommonUtil.getSessionUserRole();\r\n                           if(this.userRole == Constants.ROLE_ADMIN) {\r\n                              this.router.navigate(['/admin']);\r\n                           } else if (this.userRole == Constants.ROLE_USER) {\r\n                              this.router.navigate(['/user']);\r\n                           }\r\n                        } else {\r\n                           this.failMessage = result.message;\r\n                        }\r\n                     },\r\n                     error => console.error(error));\r\n   }\r\n}\r\n","module.exports = \".change-pass-container {\\r\\n  max-width: 800px;\\r\\n  margin-left: 500px;\\r\\n}\\r\\n\\r\\n.formFields_7 {\\r\\n  width: 300px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"change-pass-container\\\">\\r\\n  <div class=\\\"password-alert\\\">\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"openFail\\\">\\r\\n      <div class=\\\"alert-items\\\">\\r\\n        <div class=\\\"alert-item static\\\">\\r\\n          <div class=\\\"alert-icon-wrapper\\\">\\r\\n\\r\\n            </div>\\r\\n          <span class=\\\"alert-text\\\">\\r\\n                    {{failMessage}}\\r\\n                </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"alert alert-success\\\" *ngIf=\\\"openSuccess\\\">\\r\\n      <div class=\\\"alert-items\\\">\\r\\n        <div class=\\\"alert-item static\\\">\\r\\n          <div class=\\\"alert-icon-wrapper\\\">\\r\\n\\r\\n          </div>\\r\\n          <span class=\\\"alert-text\\\">\\r\\n                    Successfully changed password.\\r\\n                </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <form>\\r\\n    <section class=\\\"form-block\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"required\\\">Old Password</label>\\r\\n          <input type=\\\"password\\\" #oldPass class=\\\"formFields_7\\\" placeholder=\\\"Password\\\">\\r\\n        </div>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"form-block\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"required\\\">New Password</label>\\r\\n        <input type=\\\"password\\\" #newPass class=\\\"formFields_7\\\" placeholder=\\\"Password\\\">\\r\\n      </div>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"form-block\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"required\\\">Repeat New Password</label>\\r\\n        <input type=\\\"password\\\" #newRepeat class=\\\"formFields_7\\\" placeholder=\\\"Password\\\">\\r\\n      </div>\\r\\n    </section>\\r\\n\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submit(oldPass.value, newPass.value, newRepeat.value)\\\">Ok</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import {Component, Input, OnChanges, OnInit} from '@angular/core';\r\nimport {CommonUtil} from \"../../../util/common.util\";\r\nimport {EditPasswordService} from \"../services/edit.password.service\";\r\n\r\n@Component({\r\n  selector: 'change-password',\r\n  templateUrl: './change-password-component.html',\r\n  styleUrls: ['./change-password-component.css']\r\n})\r\nexport class ChangePasswordComponent implements OnChanges, OnInit {\r\n\r\n  private userEmail: string = '';\r\n  private openFail: boolean = false;\r\n  private failMessage: string = '';\r\n  private openSuccess: boolean = false;\r\n  constructor(private service: EditPasswordService) {\r\n  }\r\n\r\n  submit(old: string, newPass: string, newRepeat: string){\r\n    if(newPass === newRepeat){\r\n        this.service.changePassword(this.userEmail, old, newPass)\r\n          .subscribe(success => {\r\n            if(success){\r\n              this.openSuccess = true;\r\n              this.openFail = false;\r\n            }else{\r\n              this.openFail = true;\r\n              this.openSuccess = false;\r\n              this.failMessage = 'Old password is wrong';\r\n            }\r\n          },\r\n          error => console.error(error));\r\n    }else{\r\n      this.openFail = true;\r\n      this.openSuccess = false;\r\n      this.failMessage = 'The passwords do not match.';\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userEmail = CommonUtil.getSessionUserEmail();\r\n  }\r\n\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {ChangePassModel} from \"../../../services/model/change.pass.model\";\r\n\r\n@Injectable()\r\nexport class EditPasswordService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  public changePassword(userEmail: string,\r\n                        oldPass: string,\r\n                        newPass: string): Observable<Boolean> {\r\n\r\n    let requestModel: ChangePassModel = new ChangePassModel(userEmail, oldPass, newPass);\r\n    return this.http.post<Boolean>('/changePassword', requestModel);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {EditPatientProfileModel} from \"../../../services/model/edit.user.profile.model\";\r\nimport {EditProfileResultModel} from \"../../../models/editprofile.result.model\";\r\nimport {UserModel} from \"../../../models/user.model\";\r\nimport {CommonUtil} from \"../../../util/common.util\";\r\nimport {CommonService} from \"../../../services/common.service\";\r\n\r\n\r\n@Injectable()\r\nexport class EditPatientProfileService{\r\n\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  public editPatientProfile(email: string,\r\n                            firstName:string,\r\n                            lastName:string,\r\n                            id:number): Observable<EditProfileResultModel> {\r\n\r\n\r\n\r\n\r\n    let requestModel: EditPatientProfileModel = new EditPatientProfileModel(email,firstName,lastName,id);\r\n    let defaultModel:UserModel = CommonUtil.getSessionUser();\r\n\r\n\r\n    if (requestModel.email ===''){requestModel.email=defaultModel.email};\r\n    if(requestModel.firstName===''){requestModel.firstName=defaultModel.firstName};\r\n    if (requestModel.lastName===''){requestModel.lastName=defaultModel.lastName};\r\n\r\n\r\n\r\n\r\n    return this.http.post<EditProfileResultModel>('/editPatientProfile', requestModel);\r\n\r\n\r\n  }\r\n}\r\n","module.exports = \".edit-events{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.new-event{\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.card{\\r\\n  width:400px;\\r\\n}\\r\\n\\r\\nform-block {\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.card-header {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.events {\\r\\n  position: absolute;\\r\\n  left: 50%;\\r\\n  width: 1000px;\\r\\n  -webkit-transform: translate(-50%);\\r\\n          transform: translate(-50%);\\r\\n}\\r\\n\\r\\n.add-event, .labels, .select {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.error-msg {\\r\\n  margin-left:auto;\\r\\n  margin-right:0;\\r\\n}\\r\\n\\r\\n.new-event {\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n  margin-right: 18px;\\r\\n}\\r\\n\\r\\nh4 {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.date-time {\\r\\n  display: inline-block;\\r\\n  width: 350px;\\r\\n}\\r\\n\\r\\n.info {\\r\\n  margin-top: 13px;\\r\\n}\\r\\n\\r\\n.time,.description{\\r\\n  margin-top: 17px;\\r\\n}\\r\\n\\r\\n.description {\\r\\n  padding-bottom: 13px;\\r\\n}\\r\\n\\r\\n.select {\\r\\n  width: 230px;\\r\\n}\\r\\n\\r\\n#title, #date {\\r\\n  width: 230px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"blog-container\\\">\\r\\n BLOG\\r\\n</div>\\r\\n\"","import {Component, OnInit} from \"@angular/core\";\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'blog-component',\r\n  templateUrl: 'blog.component.html',\r\n  styleUrls: [\"blog.component.css\"],\r\n  providers: []\r\n})\r\nexport class BlogComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \".profile-container{\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\n\\r\\n.profile-card {\\r\\n  width: 800px;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n\\r\\n.dentist-info {\\r\\n  display: inline-block;\\r\\n  width: 800px;\\r\\n  vertical-align: top;\\r\\n  align-content: center;\\r\\n}\\r\\n\\r\\n\\r\\n.card {\\r\\n  width: 800px;\\r\\n}\\r\\n\\r\\n\\r\\nh4 {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n\\r\\n.ratings {\\r\\n  display: inline-block;\\r\\n  width: 800px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"profile-container\\\">\\r\\n  <div class=\\\"dentist-info\\\">\\r\\n    <h4>DENTIST INFO</h4>\\r\\n    <div *ngIf=\\\"isDataAvailable\\\" class=\\\"profile-card\\\">\\r\\n      <div>\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            Dr. {{dentist.firstName}} {{dentist.lastName}}\\r\\n          </div>\\r\\n          <div class=\\\"card-block\\\">\\r\\n            <div class=\\\"card-title\\\">\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"card-text\\\">\\r\\n              <p>City: {{dentist.city}}</p>\\r\\n              <p>Type: {{dentist.dentistType}}</p>\\r\\n              <p>More Information:{{dentist.generalInformation}}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  <div class=\\\"ratings\\\">\\r\\n    <h4>PATIENTS RATINGS</h4>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n//import 'clarity-icons';\r\n//import 'clarity-icons/shapes/essential-shapes';\r\n//import 'clarity-icons/shapes/technology-shapes';\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {UserModel} from \"../../../../models/user.model\";\r\nimport {DentistCommonService} from \"../services/dentist.common.service\";\r\n//import {CommonUtil} from \"../../../../util/common.util\";\r\n\r\n@Component({\r\n  selector: 'dentist-profile',\r\n  templateUrl: './dentist.profile.component.html',\r\n  styleUrls: ['./dentist.profile.component.css']\r\n})\r\nexport class DentistProfileComponent implements OnInit {\r\n  private id: number = 0;\r\n  private dentist: UserModel;\r\n  private  isDataAvailable = false;\r\n  private avgRating: number = 0.;\r\n\r\n  constructor(private _Activatedroute:ActivatedRoute,\r\n              private dentistService: DentistCommonService){\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.id = this._Activatedroute.snapshot.params['id'];\r\n  }\r\n}\r\n","export class DentistRating {\r\n  rated_id: number;\r\n  rater_id: number;\r\n  rate : number;\r\n  comment: string;\r\n\r\n  constructor(rated_id: number, rater_id: number, rate: number, comment: string) {\r\n    this.rated_id = rated_id;\r\n    this.rater_id = rater_id;\r\n    this.rate = rate;\r\n    this.comment = comment;\r\n  }\r\n}\r\n","module.exports = \".all-ratings {\\r\\n  max-width: 800px;\\r\\n}\\r\\n\\r\\n.rate {\\r\\n  width: 800px;\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.rate-dentist {\\r\\n  width: 800px;\\r\\n}\\r\\n\\r\\n.alert {\\r\\n  width: 800px;\\r\\n}\\r\\n\\r\\nh4 {\\r\\n  text-align: center;\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n.hidden-warning {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n/***************************\\r\\nPulls the stars container to the left\\r\\n***************************/\\r\\n\\r\\n.rating {\\r\\n  display: inline-block;\\r\\n  position: relative;\\r\\n  top:50%;\\r\\n  left:35%;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n/***************************\\r\\nHides the radio buttons\\r\\n***************************/\\r\\n\\r\\n.rating:not(:checked) > input {\\r\\n  position:absolute;\\r\\n  top:-9999px;\\r\\n  clip:rect(0,0,0,0);\\r\\n}\\r\\n\\r\\n/***************************\\r\\nDefault stars styles\\r\\n***************************/\\r\\n\\r\\n.rating:not(:checked) > label {\\r\\n  float:right;\\r\\n  width:1em;\\r\\n  padding:0 .1em;\\r\\n  overflow:hidden;\\r\\n  white-space:nowrap;\\r\\n  cursor:pointer;\\r\\n  font-size:200%;\\r\\n  line-height:1.2;\\r\\n  color:#ddd;\\r\\n}\\r\\n\\r\\n/***************************\\r\\nAdds the star symbol to the labels\\r\\n***************************/\\r\\n\\r\\n.rating:not(:checked) > label:before {\\r\\n  content: '★ ';\\r\\n}\\r\\n\\r\\n/***************************\\r\\nColour for the applied rating stars\\r\\n***************************/\\r\\n\\r\\n.rating > input:checked ~ label {\\r\\n  color: #f70;\\r\\n}\\r\\n\\r\\n/***************************\\r\\nColour for hovered stars when increasing the rating\\r\\n***************************/\\r\\n\\r\\n.rating:not(:checked) > label:hover,\\r\\n.rating:not(:checked) > label:hover ~ label {\\r\\n  color: gold;\\r\\n}\\r\\n\\r\\n/***************************\\r\\nColour for hovered stars when decreasing the rating\\r\\n***************************/\\r\\n\\r\\n.rating > input:checked ~ label:hover,\\r\\n.rating > input:checked ~ label:hover ~ label,\\r\\n.rating > label:hover ~ input:checked ~ label {\\r\\n  color: #ea0;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"ratings-container\\\">\\r\\n  <div class=\\\"all-ratings\\\" *ngIf=\\\"isRatingAvailable()\\\">\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"rate-container\\\" *ngIf=\\\"userId != 0\\\">\\r\\n    <h4>RATE AND COMMENT</h4>\\r\\n\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!hideWarning\\\" [class.hidden-warning]=\\\"hideWarning\\\">\\r\\n      <div class=\\\"alert-items\\\">\\r\\n        <div class=\\\"alert-item static\\\">\\r\\n          <div class=\\\"alert-icon-wrapper\\\">\\r\\n          </div>\\r\\n          <span class=\\\"alert-text\\\">{{message}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeWarning()\\\" aria-label=\\\"Close\\\">\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"rate-dentist\\\">\\r\\n      <div class=\\\"rating\\\">\\r\\n        <fieldset class=\\\"rating\\\">\\r\\n          <input type=\\\"radio\\\"\\r\\n                 value=\\\"5\\\"\\r\\n                 [name]=\\\"inputName\\\"\\r\\n                 [checked]=\\\"rating===5\\\" />\\r\\n          <label title=\\\"Perfect!\\\" (click)='onClick(5)'>5 stars</label>\\r\\n\\r\\n          <input type=\\\"radio\\\"\\r\\n                 value=\\\"4\\\"\\r\\n                 [name]=\\\"inputName\\\"\\r\\n                 [checked]=\\\"rating===4\\\" />\\r\\n          <label title=\\\"Pretty good.\\\" (click)='onClick(4)'>4 stars</label>\\r\\n\\r\\n          <input type=\\\"radio\\\"\\r\\n                 value=\\\"3\\\"\\r\\n                 [name]=\\\"inputName\\\"\\r\\n                 [checked]=\\\"rating===3\\\" />\\r\\n          <label title=\\\"Meh..\\\" (click)='onClick(3)'>3 stars</label>\\r\\n\\r\\n          <input type=\\\"radio\\\"\\r\\n                 value=\\\"2\\\"\\r\\n                 [name]=\\\"inputName\\\"\\r\\n                 [checked]=\\\"rating===2\\\" />\\r\\n          <label title=\\\"Seen better.\\\" (click)='onClick(2)'>2 stars</label>\\r\\n\\r\\n          <input type=\\\"radio\\\"\\r\\n                 value=\\\"1\\\"\\r\\n                 [name]=\\\"inputName\\\"\\r\\n                 [checked]=\\\"rating===1\\\" />\\r\\n          <label title=\\\"Sucks big time!\\\" (click)='onClick(1)'>1 star</label>\\r\\n        </fieldset>\\r\\n      </div>\\r\\n      <div class=\\\"rate\\\">\\r\\n        <form (ngSubmit)=\\\"onSubmit()\\\"\\r\\n              #registerForm=\\\"ngForm\\\">\\r\\n        <textarea id=\\\"formFields_8\\\" rows=\\\"3\\\"\\r\\n                  type=\\\"text\\\"\\r\\n                  required\\r\\n                  [(ngModel)]=\\\"comment\\\"\\r\\n                  name=\\\"comment\\\"\\r\\n                  placeholder=\\\"Comment..\\\"></textarea>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\">Rate & Comment</button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\r\nimport {DentistRating} from \"./dentist.rating.model\";\r\n\r\nimport {CommonUtil} from \"../../../../../util/common.util\";\r\nimport {RatingsService} from \"../../../../../services/ratings.service\";\r\n\r\n@Component({\r\n  selector: 'ratings-component',\r\n  templateUrl: 'ratings.component.html',\r\n  styleUrls: [\"ratings.component.css\"],\r\n  providers: [RatingsService]\r\n})\r\nexport class RatingsComponent implements OnChanges {\r\n  @Input() dentistId : number;\r\n  ratings: DentistRating[];\r\n  isDataAvailable = false;\r\n  userId: number;\r\n  @Input() rating: number = 0;\r\n  @Input() itemId: number;\r\n  @Output() ratingClick:EventEmitter<any> = new EventEmitter<any>();\r\n  inputName:string;\r\n  comment: string = \"\";\r\n  hideWarning: boolean = true;\r\n  message = \"\";\r\n  public currentRate: DentistRating;\r\n\r\n  constructor(private service: RatingsService) {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.userId = CommonUtil.getSessionUserId();\r\n    this.inputName = this.itemId + '_rating';\r\n    this.getRatings();\r\n    if(this.userId != 0){\r\n      this.service.getPatientRatingForDentist(this.dentistId,this.userId)\r\n        .subscribe( data => {\r\n          if(data!=null){\r\n            this.currentRate = data;\r\n            this.onClick(this.currentRate.rate);\r\n            this.comment = this.currentRate.comment;\r\n          }\r\n          },\r\n          err => console.log(err));\r\n    }\r\n  }\r\n\r\n  private getRatings(){\r\n    this.service.getDentistRating(this.dentistId).subscribe(data => {\r\n      this.ratings = data;\r\n      this.isDataAvailable = true;\r\n    });\r\n  }\r\n\r\n  onClick(rating:number):void{\r\n    this.rating = rating;\r\n    this.ratingClick.emit({\r\n      itemId: this.itemId,\r\n      rating: rating\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if(this.comment === \"\" || this.rating == 0){\r\n      this.message = 'Please add both a COMMENT and RATE before submitting.';\r\n      this.hideWarning = false;\r\n    }else{\r\n      this.service.rateUser(this.userId, this.dentistId, this.rating, this.comment).subscribe(success => {\r\n        if(success){\r\n          this.getRatings();\r\n          this.comment = \"\";\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  closeWarning() {\r\n    this.hideWarning= !this.hideWarning;\r\n  }\r\n\r\n  isRatingAvailable(){\r\n    return this.isDataAvailable;\r\n  }\r\n\r\n}\r\n","module.exports = \".search-container {\\r\\n  position: absolute;\\r\\n  width: 900px;\\r\\n  height: 100%;\\r\\n  left: 50%;\\r\\n  -webkit-transform: translate(-50%);\\r\\n          transform: translate(-50%)\\r\\n}\\r\\n\\r\\n.search-result{\\r\\n  left: auto;\\r\\n  width: 900px\\r\\n}\\r\\n\\r\\nh4 {\\r\\n  text-align: center;\\r\\n  padding-bottom: 50px;\\r\\n}\\r\\n\\r\\n.hidden-warning {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.search-box {\\r\\n  position: absolute;\\r\\n  width: 900px;\\r\\n  height: 100px;\\r\\n  left: 50%;\\r\\n  -webkit-transform: translate(-50%);\\r\\n          transform: translate(-50%);\\r\\n}\\r\\n\\r\\n.criteria {\\r\\n  width: 900px;\\r\\n}\\r\\n\\r\\n.search-city {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.search-name {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.btn btn-primary {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.form-block{\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.city-dropdown {\\r\\n  display: inline-block;\\r\\n  width: 180px;\\r\\n}\\r\\n\\r\\n.type-dropdown {\\r\\n  display: inline-block;\\r\\n  width: 180px;\\r\\n}\\r\\n\\r\\n.events {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  text-align: center;\\r\\n  width: 800px;\\r\\n}\\r\\n\\r\\n.select {\\r\\n  display:block;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"search-container\\\">\\r\\n\\r\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"notAuth\\\" [class.hidden-warning]=\\\"hideWarning\\\">\\r\\n    <div class=\\\"alert-items\\\">\\r\\n      <div class=\\\"alert-item static\\\">\\r\\n        <div class=\\\"alert-icon-wrapper\\\">\\r\\n\\r\\n         </div>\\r\\n        <span class=\\\"alert-text\\\">Log in or Register to view profile!</span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeWarning()\\\" aria-label=\\\"Close\\\">\\r\\n\\r\\n     </button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"search-box\\\">\\r\\n\\r\\n    <div class=\\\"type-dropdown\\\">\\r\\n\\r\\n      <!--<span *ngIf=\\\"type\\\">{{type}}</span>-->\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"city-dropdown\\\">\\r\\n\\r\\n      <!--<span *ngIf=\\\"city\\\">{{city}}</span>-->\\r\\n    </div>\\r\\n\\r\\n    <form class=\\\"search-name\\\">\\r\\n      <section class=\\\"form-block\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Search by name:</label>\\r\\n          <input type=\\\"text\\\" #titleInput>\\r\\n        </div>\\r\\n      </section>\\r\\n      <button class=\\\"btn btn-primary\\\" (click) = \\\"setNameAndSearch(titleInput.value)\\\">Search</button>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"events\\\">\\r\\n    <events></events>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {CommonUtil} from \"../../../util/common.util\";\r\nimport {UsersService} from \"../../../services/users.service\";\r\nimport {ProductModel} from \"../../../models/product.model\";\r\n\r\n/*class DentistComparator implements Comparator<UserModel> {\r\n  compare(a: UserModel, b: UserModel) {\r\n    return a.rating - b.rating;\r\n  }\r\n}*/\r\n\r\n@Component({\r\n              moduleId: module.id,\r\n              selector: 'dentist-results',\r\n              templateUrl: 'dentist.results.component.html',\r\n              styleUrls: [\"dentist.results.component.css\"],\r\n              providers: []\r\n           })\r\nexport class DentistResultsComponent implements OnInit {\r\n  //private dentistComparator = new DentistComparator();\r\n  public products: ProductModel[] = [];\r\n  public city: string = '';\r\n\r\n   constructor(private usersService: UsersService,\r\n               private router: Router) {\r\n   }\r\n\r\n  /*public performSearch(){\r\n    this.dentistService.getFilteredDentists(this.name, this.city, this.type)\r\n            .subscribe(data => this.dentists = data,\r\n            error => console.error(error));\r\n  }*/\r\n\r\n  openProfile(id: number){\r\n    if(CommonUtil.getSessionUserId()===0){\r\n      this.router.navigate([\"home/result/\", id]);\r\n    }else{\r\n      this.router.navigate([\"patient/result/\", id]);\r\n    }\r\n  }\r\n\r\n  /*setCity(city:string){\r\n    if(city){\r\n      this.currentCity = city;\r\n      this.city = city;\r\n      this.performSearch();\r\n    }else{\r\n      this.currentCity = 'Select city';\r\n      this.city = \"\";\r\n      this.performSearch();\r\n    }\r\n  }\r\n\r\n  setNameAndSearch(name:string){\r\n    this.name = name;\r\n    this.performSearch();\r\n  }\r\n\r\n  setType(type:string){\r\n    if(type){\r\n      this.currentType = type;\r\n      this.type = type;\r\n      this.performSearch();\r\n    }else{\r\n      this.type = \"\";\r\n      this.currentType = 'Select Type';\r\n      this.performSearch();\r\n    }\r\n  }\r\n\r\n  closeWarning() {\r\n    this.hideWarning= !this.hideWarning;\r\n  }*/\r\n\r\n   ngOnInit() {\r\n     this.usersService.getAllProducts()\r\n       .subscribe(data => this.products = data,\r\n         error => console.error(error));\r\n   }\r\n\r\n}\r\n","module.exports = \".events-container {\\r\\n  margin-left:50px;\\r\\n  margin-top: 30px;\\r\\n  display: inline-block;\\r\\n  width: 850px;\\r\\n}\\r\\n\\r\\np {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\nh4 {\\r\\n  text-align: center;\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n.event-info {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.card-header {\\r\\n  height: 20px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.event-comments {\\r\\n  display: inline-block;\\r\\n  vertical-align:top;\\r\\n  width: 350px;\\r\\n}\\r\\n\\r\\n.card {\\r\\n  width: 350px;\\r\\n}\\r\\n\\r\\n.card-header {\\r\\n  padding: 0 !important;\\r\\n}\\r\\n\\r\\n.com-table {\\r\\n  margin: 0 !important;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"events-container\\\">\\r\\n  <h4>SPECIAL EVENTS</h4>\\r\\n\\r\\n</div>\\r\\n\"","import {Component, OnChanges, OnInit} from '@angular/core';\r\n\r\nimport {CommonUtil} from \"../../../../util/common.util\";\r\n\r\n\r\n@Component({\r\n  selector: 'events',\r\n  templateUrl: './events.component.html',\r\n  styleUrls: ['./events.component.css']\r\n})\r\nexport class EventsComponent implements OnInit {\r\n  // private dateComparator = new DateComparator();\r\n  public openInfo: Boolean = false;\r\n  public fullName: string = \"\";\r\n /* public currentEvent: EventInfoModel = new EventInfoModel();\r\n  public comments: EventComment[] = [];\r\n  public comment: string = \"\";\r\n\r\n\r\n  constructor(private eventsService: EventsService){\r\n  }\r\n\r\n  private refreshComments(){\r\n    this.eventsService.getEventComments(this.currentEvent.id)\r\n      .subscribe( data => {\r\n          this.comments = data;\r\n        },\r\n        err => console.log(err));\r\n  }\r\n\r\n/!*  seeEventInfo(event: EventInfoModel){\r\n    this.openInfo = true;\r\n    this.currentEvent = event;\r\n    this.refreshComments();\r\n  }*!/\r\n\r\n  onSubmit(){\r\n    if(this.comment === ''){\r\n      console.log('empty comment');\r\n    }else{\r\n      this.eventsService.comment(this.fullName, this.currentEvent.id, this.comment)\r\n        .subscribe(success => {\r\n          if(success){\r\n            this.comment = '';\r\n            this.refreshComments();\r\n          }\r\n          },\r\n          err => console.log(err));\r\n    }\r\n  }*/\r\n\r\n  ngOnInit() {\r\n    this.fullName = CommonUtil.getSessionUserFullName();\r\n  }\r\n}\r\n\r\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {UserModel} from \"../../../../models/user.model\";\r\n\r\n@Injectable()\r\nexport class DentistCommonService {\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n/*\r\n  public getFilteredDentists(name, city, type): Observable<DentistModel[]> {\r\n    let params = new HttpParams()\r\n      .set('name', name)\r\n      .set('city', city)\r\n      .set('type', type);\r\n    return this.httpClient.get<DentistModel[]>('dentists/', {params: params});\r\n  }\r\n\r\n  public getDentists(): Observable<DentistModel[]> {\r\n    return this.httpClient.get<DentistModel[]>(\"/getDentists\");\r\n  }\r\n\r\n  public getUserInfo(id: number): Observable<UserModel> {\r\n    return this.httpClient.get('user/' + id);\r\n  }\r\n\r\n  public getAvgRating(id: number): Observable<number> {\r\n    return this.httpClient.get('dentistRating/' + id);\r\n  }*/\r\n}\r\n","module.exports = \".edit-events{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.new-event{\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.card{\\r\\n  width:400px;\\r\\n}\\r\\n\\r\\nform-block {\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.card-header {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.events {\\r\\n  position: absolute;\\r\\n  left: 50%;\\r\\n  width: 1000px;\\r\\n  -webkit-transform: translate(-50%);\\r\\n          transform: translate(-50%);\\r\\n}\\r\\n\\r\\n.add-event, .labels, .select {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.error-msg {\\r\\n  margin-left:auto;\\r\\n  margin-right:0;\\r\\n}\\r\\n\\r\\n.new-event {\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n  margin-right: 18px;\\r\\n}\\r\\n\\r\\nh4 {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.date-time {\\r\\n  display: inline-block;\\r\\n  width: 350px;\\r\\n}\\r\\n\\r\\n.info {\\r\\n  margin-top: 13px;\\r\\n}\\r\\n\\r\\n.time,.description{\\r\\n  margin-top: 17px;\\r\\n}\\r\\n\\r\\n.description {\\r\\n  padding-bottom: 13px;\\r\\n}\\r\\n\\r\\n.select {\\r\\n  width: 230px;\\r\\n}\\r\\n\\r\\n#title, #date {\\r\\n  width: 230px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"cart-container\\\">\\r\\n  SHOPPING CART\\r\\n</div>\\r\\n\"","import {Component, OnInit} from \"@angular/core\";\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'shopping-cart',\r\n  templateUrl: 'shopping.cart.component.html',\r\n  styleUrls: [\"shopping.cart.component.css\"],\r\n  providers: []\r\n})\r\nexport class ShoppingCartComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \".dentist-edit-container{\\r\\n  position: absolute;\\r\\n  left: 50%;\\r\\n  -webkit-transform: translate(-50%);\\r\\n          transform: translate(-50%);\\r\\n  height: 500px;\\r\\n}\\r\\n\\r\\n.edit-panel {\\r\\n  width: 700px;\\r\\n}\\r\\n\\r\\n.edit-label{\\r\\n  text-align: center;\\r\\n  padding-bottom: 30px;\\r\\n}\\r\\n\\r\\nh4{\\r\\n  text-align: center;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"dentist-edit-container\\\">\\r\\n  <h4>Edit Panel</h4>\\r\\n  <div class=\\\"edit-profile-container\\\">\\r\\n    <div class=\\\"email-alert\\\">\\r\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"openFail\\\">\\r\\n        <div class=\\\"alert-items\\\">\\r\\n          <div class=\\\"alert-item static\\\">\\r\\n            <div class=\\\"alert-icon-wrapper\\\">\\r\\n            </div>\\r\\n            <span class=\\\"alert-text\\\">\\r\\n                    {{failMessage}}\\r\\n                </span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n      <div class=\\\"alert alert-success\\\" *ngIf=\\\"openSuccess\\\">\\r\\n    <div class=\\\"alert-items\\\">\\r\\n      <div class=\\\"alert-item static\\\">\\r\\n        <div class=\\\"alert-icon-wrapper\\\">\\r\\n        </div>\\r\\n        <span class=\\\"alert-text\\\">\\r\\n                    Successfully updated profile.\\r\\n                </span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <form #editForm=\\\"ngForm\\\">\\r\\n    <div class=\\\"edit-panel\\\">\\r\\n      <section class=\\\"form-block\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"required\\\">Email</label>\\r\\n          <input type=\\\"email\\\" [(ngModel)]=\\\"UserInfo.email\\\" #email=\\\"ngModel\\\" class=\\\"formFields_7\\\" size=\\\"25\\\" placeholder=\\\"Email\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"required\\\">FirstName</label>\\r\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"UserInfo.firstName\\\" #firstName=\\\"ngModel\\\" class=\\\"formFields_7\\\" size=\\\"25\\\" placeholder=\\\"FirstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"required\\\">LastName</label>\\r\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"UserInfo.lastName\\\" #lastName=\\\"ngModel\\\" class=\\\"formFields_7\\\" size=\\\"25\\\" placeholder=\\\"LastName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"city\\\">City</label>\\r\\n          <div class=\\\"select\\\">\\r\\n            <select id=\\\"city\\\"\\r\\n                    name=\\\"city\\\"\\r\\n                    [(ngModel)]=\\\"UserInfo.city\\\"\\r\\n                    #city=\\\"ngModel\\\"\\r\\n                    [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                >\\r\\n              <option value={{constants.CITY_SOFIA}}>Sofia</option>\\r\\n              <option value={{constants.CITY_VARNA}}>Varna</option>\\r\\n              <option value={{constants.CITY_PLOVDIV}}>Plovdiv</option>\\r\\n              <option value={{constants.CITY_BURGAS}}>Burgas</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"dentistType\\\">Type</label>\\r\\n          <div class=\\\"select\\\">\\r\\n            <select id=\\\"dentistType\\\"\\r\\n                    name=\\\"dentistType\\\"\\r\\n                    [(ngModel)]=\\\"UserInfo.dentistType\\\"\\r\\n                    #dentistType=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n              <option value={{constants.TYPE_NORMAL}}>Normal</option>\\r\\n              <option value={{constants.TYPE_ORTHODONT}}>Orthodont</option>\\r\\n              <option value=\\\"{{constants.TYPE_SURGEON}}\\\">Surgeon</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>General Information</label>\\r\\n          <textarea [(ngModel)]=\\\"UserInfo.generalInformation\\\"  #generalInformation=\\\"ngModel\\\" class=\\\"formFields_7\\\" rows=\\\"8\\\" placeholder=\\\"Add General Information\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n          </textarea>\\r\\n        </div>\\r\\n\\r\\n      </section>\\r\\n    </div>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\"(click)=\\\"submit(\\r\\n      UserInfo.email,\\r\\n    UserInfo.firstName,\\r\\n    UserInfo.lastName,\\r\\n    dentistType.value,\\r\\n    city.value,\\r\\n    UserInfo.generalInformation)\\\">Confirm</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","\r\nimport {Component, OnInit} from \"@angular/core\";\r\nimport {CommonUtil} from \"../../../../util/common.util\";\r\nimport {UserModel} from \"../../../../models/user.model\";\r\nimport {Constants} from \"../../../../models/constants\";\r\nimport {CommonService} from \"../../../../services/common.service\";\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'edit-dentist-profile-component',\r\n  templateUrl: 'edit.profile.component.html',\r\n  styleUrls: [\"edit.profile.component.css\"],\r\n  providers: []\r\n})\r\nexport class EditDentistProfileComponent implements OnInit {\r\n\r\n  private User:UserModel;\r\n  private UserInfo:UserModel;\r\n  private constants = Constants;\r\n  public UserId: number = 0;\r\n  private openFail: boolean = false;\r\n  private failMessage: string = '';\r\n  private openSuccess: boolean = false;\r\n\r\n  constructor(private UserService:CommonService) {\r\n  }\r\n\r\n  /*\r\n  submit(email: string, firstName: string, lastName: string, dentistType: string, city: string,generalInformation:string) {\r\n\r\n    this.service.editDentistProfile(email, this.UserId, firstName, lastName, dentistType, city,generalInformation)\r\n      .subscribe(success => {\r\n          if (success) {\r\n            this.openSuccess = true;//console log true\r\n            this.openFail = false;\r\n            this.UserService.getUserInfo(this.UserId)\r\n              .subscribe(data => {\r\n                  this.User = data;\r\n                  CommonUtil.putSessionUser(this.User);},\r\n                err => console.log(err));\r\n\r\n          } else {\r\n            this.openFail = true;\r\n            this.openSuccess = false;\r\n            this.failMessage = 'This email is already used.';\r\n\r\n          }\r\n        },\r\n\r\n        error => console.error(error));\r\n\r\n  }\r\n\r\n\r\n  ngOnChanges() {\r\n\r\n  }\r\n  */\r\n\r\n  ngOnInit() {\r\n    this.UserId = CommonUtil.getSessionUserId();\r\n    this.UserInfo=CommonUtil.getSessionUser();\r\n\r\n  }\r\n}\r\n","module.exports = \".patient-edit-container {\\r\\n  position: absolute;\\r\\n  width: 400px;\\r\\n  left: 50%;\\r\\n  -webkit-transform: translate(-50%);\\r\\n          transform: translate(-50%);\\r\\n}\\r\\n\\r\\nh4{\\r\\n  text-align: center;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"patient-edit-container\\\">\\r\\n  <h4>Edit Panel</h4>\\r\\n    <div class=\\\"email-alert\\\">\\r\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"openFail\\\">\\r\\n        <div class=\\\"alert-items\\\">\\r\\n          <div class=\\\"alert-item static\\\">\\r\\n            <div class=\\\"alert-icon-wrapper\\\">\\r\\n            </div>\\r\\n            <span class=\\\"alert-text\\\">\\r\\n                    {{failMessage}}\\r\\n                </span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"alert alert-success\\\" *ngIf=\\\"openSuccess\\\">\\r\\n    <div class=\\\"alert-items\\\">\\r\\n      <div class=\\\"alert-item static\\\">\\r\\n        <div class=\\\"alert-icon-wrapper\\\">\\r\\n        </div>\\r\\n        <span class=\\\"alert-text\\\">\\r\\n                    Successfully updated profile.\\r\\n                </span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <form #editForm=\\\"ngForm\\\">\\r\\n    <div>\\r\\n      <section class=\\\"form-block\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"required\\\">Email</label>\\r\\n          <input type=\\\"email\\\"  [(ngModel)]=\\\"EUser.email\\\" #email=\\\"ngModel\\\" class=\\\"formFields_7\\\" placeholder=\\\"Email\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"required\\\">FirstName</label>\\r\\n          <input type=\\\"text\\\" #firstName=\\\"ngModel\\\" [(ngModel)]=\\\"EUser.firstName\\\"  class=\\\"formFields_7\\\" placeholder=\\\"FirstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"required\\\">LastName</label>\\r\\n          <input type=\\\"text\\\" #lastName=\\\"ngModel\\\" [(ngModel)]=\\\"EUser.lastName\\\" class=\\\"formFields_7\\\" placeholder=\\\"LastName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n        </div>\\r\\n      </section>\\r\\n    </div>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\"(click)=\\\"submit(EUser.email,EUser.firstName,EUser.lastName)\\\">Confirm</button>\\r\\n</form>\\r\\n</div>\\r\\n\\r\\n\"","import {Component, Input, OnChanges, OnInit} from '@angular/core';\r\nimport {CommonUtil} from \"../../../../util/common.util\";\r\nimport {EditPatientProfileService} from \"../../../shared-components/services/edit.patient.service\";\r\n\r\nimport {UserModel} from \"../../../../models/user.model\";\r\nimport {CommonService} from \"../../../../services/common.service\";\r\n\r\nimport {Constants} from \"../../../../models/constants\";\r\nimport {EditPatientProfileModel} from \"../../../../services/model/edit.user.profile.model\";\r\n\r\n\r\n\r\n@Component({\r\n              moduleId: module.id,\r\n              selector: 'edit-patient-profile-component',\r\n              templateUrl: 'edit-profile.component.html',\r\n              styleUrls: [\"edit-profile.component.css\"],\r\n              providers: []\r\n           })\r\nexport class EditProfileComponent implements OnInit {\r\n\r\n  private EUser:EditPatientProfileModel;\r\n  private User: UserModel;\r\n  public UserId: number= 0;\r\n  private UserInfo:UserModel;\r\n  private openFail: boolean = false;\r\n  private failMessage: string = '';\r\n  private openSuccess: boolean = false;\r\n   constructor(private service: EditPatientProfileService,\r\n               private UserService:CommonService) {\r\n   }\r\n\r\n  submit(email: string,firstName:string,lastName:string){\r\n\r\n      this.service.editPatientProfile(email,firstName,lastName,this.UserId)\r\n        .subscribe(result =>\r\n          {\r\n            if(result.result == Constants.RESULT_SUCCESSFUL){\r\n              this.openSuccess = true;//console log true\r\n              this.openFail = false;\r\n              this.UserService.getUserInfo(this.UserId)\r\n                .subscribe(data => {\r\n                    this.User = data;\r\n                    CommonUtil.putSessionUser(this.User);},\r\n                  err => console.log(err));\r\n\r\n            }else{\r\n              this.openFail = true;\r\n              this.openSuccess = false;\r\n              this.failMessage='This email is already used.';\r\n\r\n            }\r\n          },\r\n\r\n          error => console.error(error));\r\n\r\n    }\r\n\r\n  ngOnChanges() {\r\n\r\n  }\r\n    ngOnInit() {\r\n\r\n    this.UserId = CommonUtil.getSessionUserId();\r\n    console.log(this.UserId);\r\n\r\n    this.UserInfo=CommonUtil.getSessionUser();\r\n    this.EUser=this.UserInfo;\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \".header-navi {\\r\\n  height: 60px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.nav{\\r\\n  margin-top: 10px;\\r\\n  display: inline-block;\\r\\n  width:16%;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"patient-profie-container\\\">\\r\\n  <div class=\\\"profile-content\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {CommonUtil} from \"../../../util/common.util\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n              moduleId: module.id,\r\n              selector: 'patient-profile-component',\r\n              templateUrl: 'user-profile.component.html',\r\n              styleUrls: [\"user-profile.component.css\"],\r\n              providers: []\r\n           })\r\nexport class UserProfileComponent implements OnInit {\r\n  public userEmail;\r\n   constructor(private router: Router) {\r\n   }\r\n\r\n   loadAppointments() {\r\n     this.router.navigate(['/patient/profile/appointments']);\r\n   }\r\n   editProfile() {\r\n     this.router.navigate(['/patient/profile/edit']);\r\n   }\r\n   ambulatoryList() {\r\n     this.router.navigate(['/patient/profile/ambulatory']);\r\n   }\r\n   ngOnInit() {\r\n     this.userEmail = CommonUtil.getSessionUserEmail();\r\n   }\r\n}\r\n","module.exports = \"/*\\r\\n.header {\\r\\n  max-height: 60px;\\r\\n}\\r\\n*/\\r\\n\\r\\n.wrapper {\\r\\n  margin-top: 30px;\\r\\n  margin-left: 60px;\\r\\n  margin-right:60px;\\r\\n}\\r\\n\\r\\n.logo{\\r\\n  padding-right: 5px;\\r\\n}\\r\\n\\r\\n.subnav {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n/*#logo {\\r\\n  background-image:  url('../img/logo.jpg');\\r\\n  background-size: 100%;\\r\\n}*/\\r\\n\\r\\n.patient-container{\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n.header-4 {\\r\\n  height: 150px;\\r\\n}\\r\\n\\r\\n.branding {\\r\\n  margin-right: 250px;\\r\\n  margin-left: 200px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"main-container\\\">\\r\\n<!--  <header class=\\\"header-4\\\">\\r\\n    <img src=\\\"https://d1af89beukha9h.cloudfront.net/wp-content/uploads/2018/01/Global-Fish-and-Seafood-Market.jpg\\\" width=\\\"1800\\\" height=\\\"150\\\">\\r\\n  </header>-->\\r\\n  <header class=\\\"header-6\\\">\\r\\n    <div class=\\\"navButtons\\\">\\r\\n      <div class=\\\"header-nav nav-justified\\\">\\r\\n        <a class=\\\"nav-link nav-text\\\" routerLink=\\\"/user/profile/edit\\\" routerLinkActive=\\\"active\\\">My Profile</a>\\r\\n        <a class=\\\"nav-link nav-text\\\" routerLink=\\\"/patient/profile/edit\\\" routerLinkActive=\\\"active\\\">About Us</a>\\r\\n        <a class=\\\"nav-link nav-text\\\" routerLink=\\\"/user/dentists\\\" routerLinkActive=\\\"active\\\">Products</a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"branding\\\">\\r\\n      <a href=\\\"...\\\" class=\\\"nav-link\\\">\\r\\n        <div class=\\\"logo\\\">\\r\\n          <img src=\\\"http://icons.iconarchive.com/icons/martin-berube/flat-animal/256/shark-icon.png\\\" width=\\\"50\\\" height=\\\"50\\\">\\r\\n        </div>\\r\\n        <span class=\\\"title\\\">Joe's Fish Store</span>\\r\\n      </a>\\r\\n    </div>\\r\\n    <div class=\\\"navButtons\\\">\\r\\n      <div class=\\\"header-nav nav-justified\\\">\\r\\n        <a class=\\\"nav-link nav-text\\\" routerLink=\\\"/user/blog\\\" routerLinkActive=\\\"active\\\">Blog</a>\\r\\n        <a class=\\\"nav-link nav-text\\\" routerLink=\\\"/user/cart\\\" routerLinkActive=\\\"active\\\">Shopping Cart</a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"header-actions\\\">\\r\\n\\r\\n    </div>\\r\\n  </header>\\r\\n  <div class=\\\"patient-router\\\">\\r\\n    <router-outlet>\\r\\n    </router-outlet>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {CommonUtil} from \"../../util/common.util\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n              moduleId: module.id,\r\n              selector: 'patient-component',\r\n              templateUrl: 'user.component.html',\r\n              styleUrls: [\"user.component.css\"],\r\n              providers: []\r\n           })\r\nexport class UserComponent implements OnInit {\r\n   private userEmail: string = '';\r\n   constructor(private router: Router) {\r\n   }\r\n\r\n   editProfile(){\r\n     this.router.navigate(['/user/profile/edit']);\r\n   }\r\n\r\n   dentistSearch(){\r\n     this.router.navigate(['/user/dentists']);\r\n   }\r\n\r\n   logout(){\r\n     CommonUtil.removeUser();\r\n      this.router.navigate(['']);\r\n   }\r\n   ngOnInit() {\r\n     this.userEmail = CommonUtil.getSessionUserEmail();\r\n   }\r\n}\r\n","export class Constants {\r\n\r\n  public static readonly RESULT_SUCCESSFUL: string = \"SUCCESS\";\r\n  public static readonly RESULT_FAILED: string = \"FAIL\";\r\n  public static readonly RESULT_ERROR: string = \"ERROR\";\r\n\r\n  public static readonly ROLE_ADMIN: string = \"ADMIN\";\r\n  public static readonly ROLE_USER: string = \"USER\";\r\n\r\n  public static readonly CITY_SOFIA: string = \"Sofia\";\r\n  public static readonly CITY_VARNA: string = \"Varna\";\r\n  public static readonly CITY_PLOVDIV: string = \"Plovdiv\";\r\n  public static readonly CITY_BURGAS: string = \"Burgas\";\r\n\r\n  public static readonly SESSION_USER: string = \"currentUser\";\r\n  public static readonly PATIENT_BLACKLISTED_SUCCESSFULLY: string =\r\n       \"The patient was added to your blacklist successfully.\";\r\n  public static readonly PATIENT_UNBLACKLISTED_SUCCESSFULLY: string =\r\n       \"The patient was removed from your blacklist successfully.\";\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {ManageBlockModel} from \"./model/manage.block.model\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {BaseResultModel} from \"../models/base.result.model\";\r\n\r\n@Injectable()\r\nexport class AdminService {\r\n\r\n   private static readonly MANAGE_BLOCKED_USERS_URL: string = \"/manageBlockedUsers\";\r\n\r\n   constructor(private http: HttpClient) {\r\n   }\r\n\r\n   public blockUser(adminEmail: string,\r\n                    targetUserEmail: string,\r\n                    block: boolean): Observable<BaseResultModel> {\r\n\r\n      let requestModel: ManageBlockModel = new ManageBlockModel(adminEmail, targetUserEmail, block);\r\n      return this.http.post<BaseResultModel>(AdminService.MANAGE_BLOCKED_USERS_URL, requestModel);\r\n   }\r\n\r\n}\r\n","import {HttpClient} from \"@angular/common/http\";\r\nimport {LoginResultModel} from \"../models/login.result.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {LoginModel} from \"../main/public/login/model/login.model\";\r\nimport {RegisterModel} from \"../main/public/register/model/register.model\";\r\nimport {UserModel} from \"../models/user.model\";\r\n\r\n\r\n@Injectable()\r\nexport class CommonService {\r\n\r\n   private static readonly LOGIN_URL: string = \"/authenticate\";\r\n   private static readonly REGISTER_USER_URL: string = \"/registerUser\";\r\n\r\n   constructor(private httpClient: HttpClient) {\r\n   }\r\n\r\n   public logIn(loginModel: LoginModel): Observable<LoginResultModel> {\r\n      return this.httpClient.post<LoginResultModel>(CommonService.LOGIN_URL, loginModel);\r\n   }\r\n\r\n   public register(registerModel: RegisterModel): Observable<any> {\r\n     return this.registerUser(registerModel);\r\n   }\r\n\r\n   private registerUser(registerModel: RegisterModel) {\r\n      return this.httpClient.post(CommonService.REGISTER_USER_URL, registerModel);\r\n   }\r\n\r\n   public getUserInfo(id:number): Observable<any>{\r\n     return this.httpClient.get('user/'+ id);\r\n   }\r\n\r\n}\r\n","export class ChangePassModel {\r\n  userEmail: string;\r\n  oldPass: string;\r\n  newPass: string;\r\n\r\n  constructor(userEmail: string, oldPass: string, newPass: string) {\r\n    this.userEmail = userEmail;\r\n    this.oldPass = oldPass;\r\n    this.newPass = newPass;\r\n  }\r\n}\r\n","export class EditPatientProfileModel{\r\n  email: string;\r\n  id: number;\r\n  firstName:string;\r\n  lastName:string;\r\n\r\n\r\n  constructor(email: string,firstName:string,lastName:string,id:number) {\r\n    this.email = email;\r\n    this.firstName=firstName;\r\n    this.lastName=lastName;\r\n    this.id= id;\r\n  }\r\n}\r\n","export class ManageBlockModel {\r\n   adminEmail: string;\r\n   targetUserEmail: string;\r\n   block: boolean;\r\n\r\n   constructor(adminEmail: string, targetUserEmail: string, block: boolean) {\r\n      this.adminEmail = adminEmail;\r\n      this.targetUserEmail = targetUserEmail;\r\n      this.block = block;\r\n   }\r\n}","import {Injectable} from \"@angular/core\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\r\nimport {DentistRating} from \"../main/user-view/products/dentist-profile/ratings/dentist.rating.model\";\r\n\r\n@Injectable()\r\nexport class RatingsService{\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  public getDentistRating(id): Observable<any> {\r\n    return this.http.get('rating/' + id);\r\n  }\r\n\r\n  public rateUser(raterId: number,\r\n                  ratedId: number,\r\n                  rate: number,\r\n                  comment: string): Observable<Boolean>{\r\n    let requestModel: DentistRating = new DentistRating(raterId, ratedId, rate, comment);\r\n    return this.http.post<Boolean>('/addRating', requestModel);\r\n  }\r\n\r\n  public existsRating(patientId, dentistId): Observable<Boolean>{\r\n    let params = new HttpParams()\r\n      .set('patientId', patientId)\r\n      .set('dentistId', dentistId);\r\n    return this.http.get<Boolean>('canRate/', {params: params});\r\n  }\r\n\r\n  public getDentistRatingForPatient(dentistId, patientId): Observable<DentistRating>{\r\n    let params = new HttpParams()\r\n      .set('dentistId', dentistId)\r\n      .set('patientId', patientId);\r\n    return this.http.get<DentistRating>('getCurrentRate/', {params: params});\r\n  }\r\n\r\n  public getPatientRatingForDentist(patientId, dentistId): Observable<DentistRating>{\r\n    let params = new HttpParams()\r\n      .set('dentistId', dentistId)\r\n      .set('patientId', patientId);\r\n    return this.http.get<DentistRating>('getCurrentRate/', {params: params});\r\n  }\r\n\r\n\r\n}\r\n","import {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {ProductModel} from \"../models/product.model\";\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n\r\n   private static readonly GET_ALL_PRODUCTS_URL: string = \"/getAllProducts\";\r\n   private static readonly GET_ALL_PATIENTS_URL: string = \"/getAllPatients\";\r\n   private static readonly BLACKLIST_USER_URL: string = \"/blacklistUser\";\r\n   private static readonly GET_USER_BLACKLIST_URL: string = \"/getUserBlacklist\";\r\n\r\n   constructor(private httpClient: HttpClient) {\r\n   }\r\n\r\n   public getAllProducts(): Observable<ProductModel[]> {\r\n      return this.httpClient.get<ProductModel[]>(UsersService.GET_ALL_PRODUCTS_URL);\r\n   }\r\n\r\n  /* public getAllPatients(adminEmail: string): Observable<UsersResultModel> {\r\n      return this.httpClient.post<UsersResultModel>(UsersService.GET_ALL_PATIENTS_URL, adminEmail);\r\n   }\r\n\r\n  public getPatientsByName(id: number): Observable<PatientResultModel[]> {\r\n    return this.httpClient.get<PatientResultModel[]>('/patients/' + id);\r\n  }\r\n\r\n   public getPatients(id: number): Observable<PatientResultModel[]> {\r\n     return this.httpClient.get<PatientResultModel[]>('/patients/' + id);\r\n   }\r\n\r\n   public getPastAppointments(id: number): Observable<PastAppointmentModel[]> {\r\n     return this.httpClient.get<PastAppointmentModel[]>('pastAppointments/' + id);\r\n   }\r\n\r\n   public addAppointmentComment(id: number, comment: string): Observable<Boolean> {\r\n     let requestModel: CommentModel = new CommentModel(id, comment);\r\n     return this.httpClient.post<Boolean>('addAppointmentComment', requestModel);\r\n  }\r\n\r\n   public blacklistUser(executorEmail: string,\r\n                        targetId: number,\r\n                        doBlock: boolean): Observable<BaseResultModel> {\r\n      return this.httpClient.post<BaseResultModel>(\r\n            UsersService.BLACKLIST_USER_URL,\r\n            new BlacklistUserModel(executorEmail, targetId, doBlock));\r\n   }\r\n\r\n   public getUserBlacklist(userId: number): Observable<UserBlacklistModel> {\r\n      return this.httpClient.post<UserBlacklistModel>(\r\n            UsersService.GET_USER_BLACKLIST_URL,\r\n            userId);\r\n   }*/\r\n}\r\n","import {Constants} from \"../models/constants\";\r\nimport {UserModel} from \"../models/user.model\";\r\n\r\nexport class CommonUtil {\r\n\r\n   public static putSessionUser(user: UserModel): void {\r\n      sessionStorage.setItem(Constants.SESSION_USER, JSON.stringify(user));\r\n   }\r\n\r\n   public static removeUser(): void {\r\n     sessionStorage.removeItem(Constants.SESSION_USER);\r\n   }\r\n\r\n   public static getSessionUser(): UserModel {\r\n      return JSON.parse(sessionStorage.getItem(Constants.SESSION_USER)) as UserModel;\r\n   }\r\n\r\n   public static getSessionUserRole(): string {\r\n      let user: UserModel = this.getSessionUser();\r\n      return user ? user.role : \"\";\r\n   }\r\n\r\n   public static getSessionUserEmail(): string {\r\n     let user: UserModel = this.getSessionUser();\r\n     return user ? user.email : \"\";\r\n   }\r\n   public static getSessionUserId(): number {\r\n     let user: UserModel = this.getSessionUser();\r\n     return user ? user.id: 0;\r\n   }\r\n\r\n   public static getSessionUserFullName(): string {\r\n     let user: UserModel = this.getSessionUser();\r\n     return user ? (user.firstName + ' ' + user.lastName) : \"\";\r\n  }\r\n\r\n   public static toDate(str: string): Date {\r\n      return new Date(\"2000-01-01T\" + str + \":00\");\r\n   }\r\n\r\n   public static getTime(millis: number): string {\r\n      if (millis == null) {\r\n         return \"\";\r\n      }\r\n      let date: Date = new Date(millis);\r\n      return date.toTimeString().substr(3, 5);\r\n   }\r\n\r\n   public static getReadableDay(weekDay: string): string {\r\n      return weekDay.substr(0, 1) + weekDay.substr(1).toLowerCase();\r\n   }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import {enableProdMode} from '@angular/core';\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\n\r\nimport {AppModule} from './app/app.module';\r\nimport {environment} from './environments/environment';\r\n\r\nif (environment.production) {\r\n   //enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n                        .catch(err => console.log(err));\r\n"],"sourceRoot":""}